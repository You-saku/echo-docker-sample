openapi: 3.0.0

info:
  title: echo-docker
  version: 1.0.0
servers: # base endpoint
  - url: http://localhost:80/api
    description: base endpoint.
components: # JWTの定義
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT 
security: # JWTの設定
  - bearerAuth: []
paths:
  /login: # path
    post:
      summary: login.
      tags: 
        - auth
      description: attempt login.
      requestBody:
        required:
          true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "sample@example.com"
                password:
                  type: string
                  example: "password"
              required:
                - email
                - password
      responses:
        '200': # status code
          description: success login.
          content:
            application/json:
              schema:
                type: object
                properties: 
                  token:
                    type: string
                    example: "eyJhbGciONICId223I1NiIsInR5cCI6IkpXVCJ9.eyJcfwcewffUBleGFtcGxlLmNvbSIsInBhc3N3b3JkIjoicGFzc3dvcmQyIiwiZXhwIjoxNjgwMDAzNTM3fQ.Z0acdwbebrrxqxB0NpelTQPuNJnMu2IEfY_299aI"
        '401':
          description: user is not exist.
          content:
            application/json:
              schema: 
                type: object
                properties:
                  message:
                    type: string
                    example: "This user is not exist."
  /users:
    post:
      summary: create new user.
      security: # securityを適用
        - bearerAuth: []
      tags: 
        - user
      description: create new user resource.
      requestBody:
        required:
          true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "you-saku"
                email:
                  type: string
                  example: "sample@example.com"
                password:
                  type: string
                  example: "password"
                age:
                  type: integer
                  example: 10
              required:
                - name
                - email
                - password
      responses:
        '201':
          description: success create new user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    example: 2
                  name:
                    type: string
                    example: "you-saku"
                  email:
                    type: string
                    example: "sample@example.com"
                  password:
                    type: string
                    example: "password"
                  age:
                    type: integer
                    example: 10
                  CreatedAt:
                    type: string
                    format: date-time
                    example: "2023-03-25T11:58:24.906Z"
                  UpdatedAt:
                    type: string
                    format: date-time
                    example: "2023-03-25T11:58:24.906Z"
                  DeletedAt:
                    type: string
                    format: date-time
                    nullable: true
                    example: null
                  Todos: # TODO
                    type: array
                    nullable: true
                    example: null
    get:
      summary: get users.
      tags: 
        - user
      description: get all users.
      responses:
        '200':
          description: success get all users.
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    ID:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "you-saku"
                    email:
                      type: string
                      example: "sample@example.com"
                    password:
                      type: string
                      example: "password"
                    age:
                      type: integer
                      example: 10
                    CreatedAt:
                      type: string
                      format: date-time
                      example: "2023-03-25T11:58:24.906Z"
                    UpdatedAt:
                      type: string
                      format: date-time
                      example: "2023-03-25T11:58:24.906Z"
                    DeletedAt:
                      type: string
                      format: date-time
                      nullable: true
                      example: null
                    Todos: # TODO
                      type: array 
                      example: []
  /users/{id}:
    get:
      summary: get a user.
      tags: 
        - user
      description: get a user.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minItems: 1
      responses:
        '200':
          description: success get a user.
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    ID:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "you-saku"
                    email:
                      type: string
                      example: "sample@example.com"
                    password:
                      type: string
                      example: "password"
                    age:
                      type: integer
                      example: 10
                    CreatedAt:
                      type: string
                      format: date-time
                      example: "2023-03-25T11:58:24.906Z"
                    UpdatedAt:
                      type: string
                      format: date-time
                      example: "2023-03-25T11:58:24.906Z"
                    DeletedAt:
                      type: string
                      format: date-time
                      nullable: true
                      example: null
                    Todos: # TODO
                      type: array
                      example: []
    put:
      summary: update a user.
      tags: 
        - user
      description: update a user.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minItems: 1
      requestBody:
        required:
          true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "you-saku"
                email:
                  type: string
                  example: "sample@example.com"
                password:
                  type: string
                  example: "password"
                age:
                  type: integer
                  example: 10
              required:
                - name
                - email
                - password
      responses:
        '200':
          description: success update a user.
          content:
            application/json:
              schema: 
                  type: object
                  properties:
                    ID:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "you-saku"
                    email:
                      type: string
                      example: "sample@example.com"
                    password:
                      type: string
                      example: "password"
                    age:
                      type: integer
                      example: 10
                    CreatedAt:
                      type: string
                      format: date-time
                      nullable: true
                      example: "2023-03-25T11:58:24.906Z"
                    UpdatedAt:
                      type: string
                      format: date-time
                      example: "2023-03-25T11:58:24.906Z"
                    DeletedAt:
                      type: string
                      format: date-time
                      nullable: true
                      example: null
                    Todos: # TODO
                      type: array
                      nullable: true
                      example: null
    delete:
      summary: delete a user.
      tags: 
        - user
      description: delete a user.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minItems: 1
      responses:
        '204':
          description: success delete a user.
  /ok:
    get:
      summary: sample endpoint.
      tags:
        - sample
      description: test.
      responses:
        '200':
          description: 「api」 word.
          content:
            application/json:
              schema: 
                type: string
                example: api
